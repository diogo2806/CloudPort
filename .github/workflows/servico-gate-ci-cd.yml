name: CI/CD servico-gate

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/servico-gate/**'
      - '.github/workflows/servico-gate-ci-cd.yml'
      - 'docker/**'
      - 'infra/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'backend/servico-gate/**'
      - '.github/workflows/servico-gate-ci-cd.yml'

env:
  REGISTRY: ${{ secrets.CI_DOCKER_REGISTRY }}
  IMAGE_NAME: ${{ secrets.CI_DOCKER_IMAGE }}
  DOCKER_USERNAME: ${{ secrets.CI_DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.CI_DOCKER_PASSWORD }}

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven
          cache-dependency-path: backend/servico-gate/pom.xml

      - name: Run tests
        working-directory: backend/servico-gate
        run: mvn -B clean verify

      - name: Arquivar relatÃ³rio Surefire
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: backend/servico-gate/target/surefire-reports

  docker:
    name: Build & Push Docker Image
    needs: build-test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven
          cache-dependency-path: backend/servico-gate/pom.xml

      - name: Build jar
        working-directory: backend/servico-gate
        run: mvn -B -DskipTests package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        if: env.REGISTRY != ''
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Extract version
        id: meta
        run: |
          VERSION=${{ github.ref_name }}
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: backend/servico-gate
          file: backend/servico-gate/Dockerfile
          push: ${{ env.REGISTRY != '' }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
            ${{ env.IMAGE_NAME }}:latest
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}

  deploy:
    name: Continuous Delivery
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Render manifest com kustomize
        run: |
          echo "Renderizando manifestos do servico-gate"
          kubectl kustomize infra/kubernetes | tee manifest.yaml
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
        continue-on-error: true

      - name: Aplicar manifestos
        if: ${{ env.REGISTRY != '' }}
        uses: azure/k8s-deploy@v5
        with:
          manifests: |
            infra/kubernetes/servico-gate.yaml
          images: |
            ${{ env.IMAGE_NAME }}:${{ needs.docker.outputs.version || 'latest' }}
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
